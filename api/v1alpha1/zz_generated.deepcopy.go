//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cex) DeepCopyInto(out *Cex) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cex.
func (in *Cex) DeepCopy() *Cex {
	if in == nil {
		return nil
	}
	out := new(Cex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Clevis) DeepCopyInto(out *Clevis) {
	*out = *in
	in.Custom.DeepCopyInto(&out.Custom)
	if in.Tang != nil {
		in, out := &in.Tang, &out.Tang
		*out = make([]Tang, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(int)
		**out = **in
	}
	if in.Tpm2 != nil {
		in, out := &in.Tpm2, &out.Tpm2
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Clevis.
func (in *Clevis) DeepCopy() *Clevis {
	if in == nil {
		return nil
	}
	out := new(Clevis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClevisCustom) DeepCopyInto(out *ClevisCustom) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(string)
		**out = **in
	}
	if in.NeedsNetwork != nil {
		in, out := &in.NeedsNetwork, &out.NeedsNetwork
		*out = new(bool)
		**out = **in
	}
	if in.Pin != nil {
		in, out := &in.Pin, &out.Pin
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClevisCustom.
func (in *ClevisCustom) DeepCopy() *ClevisCustom {
	if in == nil {
		return nil
	}
	out := new(ClevisCustom)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	in.Ignition.DeepCopyInto(&out.Ignition)
	in.KernelArguments.DeepCopyInto(&out.KernelArguments)
	in.Passwd.DeepCopyInto(&out.Passwd)
	in.Storage.DeepCopyInto(&out.Storage)
	in.Systemd.DeepCopyInto(&out.Systemd)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Directory) DeepCopyInto(out *Directory) {
	*out = *in
	in.Node.DeepCopyInto(&out.Node)
	in.DirectoryEmbedded1.DeepCopyInto(&out.DirectoryEmbedded1)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Directory.
func (in *Directory) DeepCopy() *Directory {
	if in == nil {
		return nil
	}
	out := new(Directory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEmbedded1) DeepCopyInto(out *DirectoryEmbedded1) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEmbedded1.
func (in *DirectoryEmbedded1) DeepCopy() *DirectoryEmbedded1 {
	if in == nil {
		return nil
	}
	out := new(DirectoryEmbedded1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Disk) DeepCopyInto(out *Disk) {
	*out = *in
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]Partition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WipeTable != nil {
		in, out := &in.WipeTable, &out.WipeTable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Disk.
func (in *Disk) DeepCopy() *Disk {
	if in == nil {
		return nil
	}
	out := new(Disk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dropin) DeepCopyInto(out *Dropin) {
	*out = *in
	if in.Contents != nil {
		in, out := &in.Contents, &out.Contents
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dropin.
func (in *Dropin) DeepCopy() *Dropin {
	if in == nil {
		return nil
	}
	out := new(Dropin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *File) DeepCopyInto(out *File) {
	*out = *in
	in.Node.DeepCopyInto(&out.Node)
	in.FileEmbedded1.DeepCopyInto(&out.FileEmbedded1)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new File.
func (in *File) DeepCopy() *File {
	if in == nil {
		return nil
	}
	out := new(File)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileEmbedded1) DeepCopyInto(out *FileEmbedded1) {
	*out = *in
	if in.Append != nil {
		in, out := &in.Append, &out.Append
		*out = make([]Resource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Contents.DeepCopyInto(&out.Contents)
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileEmbedded1.
func (in *FileEmbedded1) DeepCopy() *FileEmbedded1 {
	if in == nil {
		return nil
	}
	out := new(FileEmbedded1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Filesystem) DeepCopyInto(out *Filesystem) {
	*out = *in
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]MountOption, len(*in))
		copy(*out, *in)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]FilesystemOption, len(*in))
		copy(*out, *in)
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.WipeFilesystem != nil {
		in, out := &in.WipeFilesystem, &out.WipeFilesystem
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Filesystem.
func (in *Filesystem) DeepCopy() *Filesystem {
	if in == nil {
		return nil
	}
	out := new(Filesystem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHeader) DeepCopyInto(out *HTTPHeader) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeader.
func (in *HTTPHeader) DeepCopy() *HTTPHeader {
	if in == nil {
		return nil
	}
	out := new(HTTPHeader)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in HTTPHeaders) DeepCopyInto(out *HTTPHeaders) {
	{
		in := &in
		*out = make(HTTPHeaders, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHeaders.
func (in HTTPHeaders) DeepCopy() HTTPHeaders {
	if in == nil {
		return nil
	}
	out := new(HTTPHeaders)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ignition) DeepCopyInto(out *Ignition) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	in.Proxy.DeepCopyInto(&out.Proxy)
	in.Security.DeepCopyInto(&out.Security)
	in.Timeouts.DeepCopyInto(&out.Timeouts)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ignition.
func (in *Ignition) DeepCopy() *Ignition {
	if in == nil {
		return nil
	}
	out := new(Ignition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IgnitionConfig) DeepCopyInto(out *IgnitionConfig) {
	*out = *in
	in.Merge.DeepCopyInto(&out.Merge)
	out.Replace = in.Replace
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IgnitionConfig.
func (in *IgnitionConfig) DeepCopy() *IgnitionConfig {
	if in == nil {
		return nil
	}
	out := new(IgnitionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IgnitionV3) DeepCopyInto(out *IgnitionV3) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IgnitionV3.
func (in *IgnitionV3) DeepCopy() *IgnitionV3 {
	if in == nil {
		return nil
	}
	out := new(IgnitionV3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IgnitionV3) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IgnitionV3List) DeepCopyInto(out *IgnitionV3List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IgnitionV3, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IgnitionV3List.
func (in *IgnitionV3List) DeepCopy() *IgnitionV3List {
	if in == nil {
		return nil
	}
	out := new(IgnitionV3List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IgnitionV3List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IgnitionV3Spec) DeepCopyInto(out *IgnitionV3Spec) {
	*out = *in
	out.TargetSecret = in.TargetSecret
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IgnitionV3Spec.
func (in *IgnitionV3Spec) DeepCopy() *IgnitionV3Spec {
	if in == nil {
		return nil
	}
	out := new(IgnitionV3Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IgnitionV3Status) DeepCopyInto(out *IgnitionV3Status) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IgnitionV3Status.
func (in *IgnitionV3Status) DeepCopy() *IgnitionV3Status {
	if in == nil {
		return nil
	}
	out := new(IgnitionV3Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KernelArguments) DeepCopyInto(out *KernelArguments) {
	*out = *in
	if in.ShouldExist != nil {
		in, out := &in.ShouldExist, &out.ShouldExist
		*out = make([]KernelArgument, len(*in))
		copy(*out, *in)
	}
	if in.ShouldNotExist != nil {
		in, out := &in.ShouldNotExist, &out.ShouldNotExist
		*out = make([]KernelArgument, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KernelArguments.
func (in *KernelArguments) DeepCopy() *KernelArguments {
	if in == nil {
		return nil
	}
	out := new(KernelArguments)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Link) DeepCopyInto(out *Link) {
	*out = *in
	in.Node.DeepCopyInto(&out.Node)
	in.LinkEmbedded1.DeepCopyInto(&out.LinkEmbedded1)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Link.
func (in *Link) DeepCopy() *Link {
	if in == nil {
		return nil
	}
	out := new(Link)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkEmbedded1) DeepCopyInto(out *LinkEmbedded1) {
	*out = *in
	if in.Hard != nil {
		in, out := &in.Hard, &out.Hard
		*out = new(bool)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkEmbedded1.
func (in *LinkEmbedded1) DeepCopy() *LinkEmbedded1 {
	if in == nil {
		return nil
	}
	out := new(LinkEmbedded1)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Luks) DeepCopyInto(out *Luks) {
	*out = *in
	in.Cex.DeepCopyInto(&out.Cex)
	in.Clevis.DeepCopyInto(&out.Clevis)
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.Discard != nil {
		in, out := &in.Discard, &out.Discard
		*out = new(bool)
		**out = **in
	}
	in.KeyFile.DeepCopyInto(&out.KeyFile)
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.OpenOptions != nil {
		in, out := &in.OpenOptions, &out.OpenOptions
		*out = make([]OpenOption, len(*in))
		copy(*out, *in)
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]LuksOption, len(*in))
		copy(*out, *in)
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.WipeVolume != nil {
		in, out := &in.WipeVolume, &out.WipeVolume
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Luks.
func (in *Luks) DeepCopy() *Luks {
	if in == nil {
		return nil
	}
	out := new(Luks)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Node) DeepCopyInto(out *Node) {
	*out = *in
	in.Group.DeepCopyInto(&out.Group)
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(bool)
		**out = **in
	}
	in.User.DeepCopyInto(&out.User)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Node.
func (in *Node) DeepCopy() *Node {
	if in == nil {
		return nil
	}
	out := new(Node)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeGroup) DeepCopyInto(out *NodeGroup) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeGroup.
func (in *NodeGroup) DeepCopy() *NodeGroup {
	if in == nil {
		return nil
	}
	out := new(NodeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeUser) DeepCopyInto(out *NodeUser) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeUser.
func (in *NodeUser) DeepCopy() *NodeUser {
	if in == nil {
		return nil
	}
	out := new(NodeUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Partition) DeepCopyInto(out *Partition) {
	*out = *in
	if in.GUID != nil {
		in, out := &in.GUID, &out.GUID
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Resize != nil {
		in, out := &in.Resize, &out.Resize
		*out = new(bool)
		**out = **in
	}
	if in.ShouldExist != nil {
		in, out := &in.ShouldExist, &out.ShouldExist
		*out = new(bool)
		**out = **in
	}
	if in.SizeMiB != nil {
		in, out := &in.SizeMiB, &out.SizeMiB
		*out = new(int)
		**out = **in
	}
	if in.StartMiB != nil {
		in, out := &in.StartMiB, &out.StartMiB
		*out = new(int)
		**out = **in
	}
	if in.TypeGUID != nil {
		in, out := &in.TypeGUID, &out.TypeGUID
		*out = new(string)
		**out = **in
	}
	if in.WipePartitionEntry != nil {
		in, out := &in.WipePartitionEntry, &out.WipePartitionEntry
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Partition.
func (in *Partition) DeepCopy() *Partition {
	if in == nil {
		return nil
	}
	out := new(Partition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Passwd) DeepCopyInto(out *Passwd) {
	*out = *in
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]PasswdGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]PasswdUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Passwd.
func (in *Passwd) DeepCopy() *Passwd {
	if in == nil {
		return nil
	}
	out := new(Passwd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswdGroup) DeepCopyInto(out *PasswdGroup) {
	*out = *in
	if in.Gid != nil {
		in, out := &in.Gid, &out.Gid
		*out = new(int)
		**out = **in
	}
	if in.PasswordHash != nil {
		in, out := &in.PasswordHash, &out.PasswordHash
		*out = new(string)
		**out = **in
	}
	if in.ShouldExist != nil {
		in, out := &in.ShouldExist, &out.ShouldExist
		*out = new(bool)
		**out = **in
	}
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswdGroup.
func (in *PasswdGroup) DeepCopy() *PasswdGroup {
	if in == nil {
		return nil
	}
	out := new(PasswdGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswdUser) DeepCopyInto(out *PasswdUser) {
	*out = *in
	if in.Gecos != nil {
		in, out := &in.Gecos, &out.Gecos
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]Group, len(*in))
		copy(*out, *in)
	}
	if in.HomeDir != nil {
		in, out := &in.HomeDir, &out.HomeDir
		*out = new(string)
		**out = **in
	}
	if in.NoCreateHome != nil {
		in, out := &in.NoCreateHome, &out.NoCreateHome
		*out = new(bool)
		**out = **in
	}
	if in.NoLogInit != nil {
		in, out := &in.NoLogInit, &out.NoLogInit
		*out = new(bool)
		**out = **in
	}
	if in.NoUserGroup != nil {
		in, out := &in.NoUserGroup, &out.NoUserGroup
		*out = new(bool)
		**out = **in
	}
	if in.PasswordHash != nil {
		in, out := &in.PasswordHash, &out.PasswordHash
		*out = new(string)
		**out = **in
	}
	if in.PrimaryGroup != nil {
		in, out := &in.PrimaryGroup, &out.PrimaryGroup
		*out = new(string)
		**out = **in
	}
	if in.SSHAuthorizedKeys != nil {
		in, out := &in.SSHAuthorizedKeys, &out.SSHAuthorizedKeys
		*out = make([]SSHAuthorizedKey, len(*in))
		copy(*out, *in)
	}
	if in.Shell != nil {
		in, out := &in.Shell, &out.Shell
		*out = new(string)
		**out = **in
	}
	if in.ShouldExist != nil {
		in, out := &in.ShouldExist, &out.ShouldExist
		*out = new(bool)
		**out = **in
	}
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(bool)
		**out = **in
	}
	if in.UID != nil {
		in, out := &in.UID, &out.UID
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswdUser.
func (in *PasswdUser) DeepCopy() *PasswdUser {
	if in == nil {
		return nil
	}
	out := new(PasswdUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Proxy) DeepCopyInto(out *Proxy) {
	*out = *in
	if in.HTTPProxy != nil {
		in, out := &in.HTTPProxy, &out.HTTPProxy
		*out = new(string)
		**out = **in
	}
	if in.HTTPSProxy != nil {
		in, out := &in.HTTPSProxy, &out.HTTPSProxy
		*out = new(string)
		**out = **in
	}
	if in.NoProxy != nil {
		in, out := &in.NoProxy, &out.NoProxy
		*out = make([]NoProxyItem, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Proxy.
func (in *Proxy) DeepCopy() *Proxy {
	if in == nil {
		return nil
	}
	out := new(Proxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Raid) DeepCopyInto(out *Raid) {
	*out = *in
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]Device, len(*in))
		copy(*out, *in)
	}
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]RaidOption, len(*in))
		copy(*out, *in)
	}
	if in.Spares != nil {
		in, out := &in.Spares, &out.Spares
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Raid.
func (in *Raid) DeepCopy() *Raid {
	if in == nil {
		return nil
	}
	out := new(Raid)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.HTTPHeaders != nil {
		in, out := &in.HTTPHeaders, &out.HTTPHeaders
		*out = make(HTTPHeaders, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	in.Verification.DeepCopyInto(&out.Verification)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Security) DeepCopyInto(out *Security) {
	*out = *in
	in.TLS.DeepCopyInto(&out.TLS)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Security.
func (in *Security) DeepCopy() *Security {
	if in == nil {
		return nil
	}
	out := new(Security)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Storage) DeepCopyInto(out *Storage) {
	*out = *in
	if in.Directories != nil {
		in, out := &in.Directories, &out.Directories
		*out = make([]Directory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]Disk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]File, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filesystems != nil {
		in, out := &in.Filesystems, &out.Filesystems
		*out = make([]Filesystem, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make([]Link, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Luks != nil {
		in, out := &in.Luks, &out.Luks
		*out = make([]Luks, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Raid != nil {
		in, out := &in.Raid, &out.Raid
		*out = make([]Raid, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Storage.
func (in *Storage) DeepCopy() *Storage {
	if in == nil {
		return nil
	}
	out := new(Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Systemd) DeepCopyInto(out *Systemd) {
	*out = *in
	if in.Units != nil {
		in, out := &in.Units, &out.Units
		*out = make([]Unit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Systemd.
func (in *Systemd) DeepCopy() *Systemd {
	if in == nil {
		return nil
	}
	out := new(Systemd)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLS) DeepCopyInto(out *TLS) {
	*out = *in
	if in.CertificateAuthorities != nil {
		in, out := &in.CertificateAuthorities, &out.CertificateAuthorities
		*out = make([]Resource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLS.
func (in *TLS) DeepCopy() *TLS {
	if in == nil {
		return nil
	}
	out := new(TLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tang) DeepCopyInto(out *Tang) {
	*out = *in
	if in.Advertisement != nil {
		in, out := &in.Advertisement, &out.Advertisement
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tang.
func (in *Tang) DeepCopy() *Tang {
	if in == nil {
		return nil
	}
	out := new(Tang)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Timeouts) DeepCopyInto(out *Timeouts) {
	*out = *in
	if in.HTTPResponseHeaders != nil {
		in, out := &in.HTTPResponseHeaders, &out.HTTPResponseHeaders
		*out = new(int)
		**out = **in
	}
	if in.HTTPTotal != nil {
		in, out := &in.HTTPTotal, &out.HTTPTotal
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Timeouts.
func (in *Timeouts) DeepCopy() *Timeouts {
	if in == nil {
		return nil
	}
	out := new(Timeouts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Unit) DeepCopyInto(out *Unit) {
	*out = *in
	if in.Contents != nil {
		in, out := &in.Contents, &out.Contents
		*out = new(string)
		**out = **in
	}
	if in.Dropins != nil {
		in, out := &in.Dropins, &out.Dropins
		*out = make([]Dropin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Mask != nil {
		in, out := &in.Mask, &out.Mask
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Unit.
func (in *Unit) DeepCopy() *Unit {
	if in == nil {
		return nil
	}
	out := new(Unit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Verification) DeepCopyInto(out *Verification) {
	*out = *in
	if in.Hash != nil {
		in, out := &in.Hash, &out.Hash
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Verification.
func (in *Verification) DeepCopy() *Verification {
	if in == nil {
		return nil
	}
	out := new(Verification)
	in.DeepCopyInto(out)
	return out
}
